/** (github.com/dynamic-deadfunction-detector)
* Instrumentation log function used by the instrumenter
* note that the data object is already stringified.
*/
var logHistory = [];
function instrumentation_log(data) {
    
                function exists(e) { return e.file == jData.file && e.range[0] == jData.range[0] && e.range[1] == jData.range[1]; }
                var jData = JSON.parse(data);
                if (logHistory.some(exists)){ return; }
                logHistory.push(jData);
    fetch("http://127.0.0.1:8004/alivefunction", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: data
            }).then((response) => { });
}


(function(define) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[18,2053],"range":[1,2053],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":13,"label":"canjs"}');
  if (typeof define == "undefined") {
    define = function(deps, fn) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[90,143],"range":[71,143],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":0,"label":"canjs"}');
      can.Model.LocalStorage = fn(can.Model);
    }
  }

  define(['can/model'], function(Model) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[189,2049],"range":[173,2049],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":12,"label":"canjs"}');
    return Model.extend({
      // Implement local storage handling
      localStore: function(cb) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[290,648],"range":[277,648],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":2,"label":"canjs"}');
        var name = this.name,
          data = JSON.parse(window.localStorage[name] || (window.localStorage[name] = '[]')),
          res = cb.call(this, data);
        if (res !== false) {
          can.each(data, function(todo) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[522,568],"range":[507,568],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":1,"label":"canjs"}');
            delete todo.editing;
          });
          window.localStorage[name] = JSON.stringify(data);
        }
      },

      findAll: function(params) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[683,1002],"range":[666,1002],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":5,"label":"canjs"}');
        var def = new can.Deferred();
        this.localStore(function(todos) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[763,972],"range":[747,972],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":4,"label":"canjs"}');
          var instances = [],
            self = this;
          can.each(todos, function(todo) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[861,918],"range":[846,918],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":3,"label":"canjs"}');
            instances.push(new self(todo));
          });
          def.resolve({data: instances});
        });
        return def;
      },

      destroy: function(id) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1033,1351],"range":[1020,1351],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":7,"label":"canjs"}');
        var def = new can.Deferred();
        this.localStore(function(todos) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1113,1321],"range":[1097,1321],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":6,"label":"canjs"}');
          for (var i = 0; i < todos.length; i++) {
            if (todos[i].id === id) {
              todos.splice(i, 1);
              break;
            }
          }
          def.resolve({});
        });
        return def;
      },

      create: function(attrs) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1384,1642],"range":[1368,1642],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":9,"label":"canjs"}');
        var def = new can.Deferred();
        this.localStore(function(todos) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1464,1575],"range":[1448,1575],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":8,"label":"canjs"}');
          attrs.id = attrs.id || parseInt(100000 * Math.random(), 10);
          todos.push(attrs);
        });
        def.resolve({id: attrs.id});
        return def;
      },

      update: function(id, attrs) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1679,2033],"range":[1659,2033],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":11,"label":"canjs"}');
        var def = new can.Deferred(), todo;
        this.localStore(function(todos) {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1765,1978],"range":[1749,1978],"file":"todomvc/examples.lacunized.instrumented/canjs/node_modules/canjs-localstorage/can.localstorage.js","index":10,"label":"canjs"}');
          for (var i = 0; i < todos.length; i++) {
            if (todos[i].id === id) {
              todo = todos[i];
              break;
            }
          }
          can.extend(todo, attrs);
        });
        def.resolve({});
        return def;
      }
    }, {});
  });
})(window.define);
