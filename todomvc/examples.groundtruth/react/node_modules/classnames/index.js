/** (github.com/dynamic-deadfunction-detector)
* Instrumentation log function used by the instrumenter
* note that the data object is already stringified.
*/
var logHistory = [];
function instrumentation_log(data) {
    
                function exists(e) { return e.file == jData.file && e.range[0] == jData.range[0] && e.range[1] == jData.range[1]; }
                var jData = JSON.parse(data);
                if (logHistory.some(exists)){ return; }
                logHistory.push(jData);
    fetch("http://127.0.0.1:8004/alivefunction", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: data
            }).then((response) => { });
}


/*!
  Copyright (c) 2015 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {instrumentation_log('{"type":"FunctionExpression","bodyRange":[158,1102],"range":[146,1102],"file":"todomvc/examples.lacunized.instrumented/react/node_modules/classnames/index.js","index":2,"label":"react"}');
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {instrumentation_log('{"type":"FunctionDeclaration","bodyRange":[234,744],"range":[211,744],"file":"todomvc/examples.lacunized.instrumented/react/node_modules/classnames/index.js","index":0,"label":"react"}');
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes += ' ' + arg;
			} else if (Array.isArray(arg)) {
				classes += ' ' + classNames.apply(null, arg);
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes += ' ' + key;
					}
				}
			}
		}

		return classes.substr(1);
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', function () {instrumentation_log('{"type":"FunctionExpression","bodyRange":[1024,1051],"range":[1012,1051],"file":"todomvc/examples.lacunized.instrumented/react/node_modules/classnames/index.js","index":1,"label":"react"}');
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());
