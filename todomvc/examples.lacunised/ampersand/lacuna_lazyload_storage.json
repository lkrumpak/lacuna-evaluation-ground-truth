{
    "node_modules/todomvc-common/base.js[197:548]": "\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t",
    "node_modules/todomvc-common/base.js[1588:3332]": "\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t",
    "node_modules/todomvc-common/base.js[3484:3613]": "var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)",
    "node_modules/todomvc-common/base.js[4361:5286]": "\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t",
    "node_modules/todomvc-common/base.js[5330:6369]": "\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t",
    "node_modules/todomvc-common/base.js[6419:7038]": "\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t",
    "todomvc.bundle.js[4239:4305]": "\n\t\tif (this.collection) {\n\t\t\tthis.collection.remove(this);\n\t\t}\n\t",
    "todomvc.bundle.js[5462:5511]": "\n\t\t\treturn todo.completed ? ++total : total;\n\t\t",
    "todomvc.bundle.js[5594:5702]": "\n\t\tvar toRemove = this.filter(function (todo) {\n\t\t\treturn todo.completed;\n\t\t});\n\t\tthis.remove(toRemove);\n\t",
    "todomvc.bundle.js[6127:6183]": "\n\t\tlocalStorage[STORAGE_KEY] = JSON.stringify(this);\n\t",
    "todomvc.bundle.js[6479:6550]": "\n\t\tif (e.key === STORAGE_KEY) {\n\t\t\tthis.readFromLocalStorage();\n\t\t}\n\t",
    "todomvc.bundle.js[7036:7370]": "\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<li><div class=\\\"view\\\"><input type=\\\"checkbox\\\" data-hook=\\\"checkbox\\\" class=\\\"toggle\\\"/><label data-hook=\\\"title\\\"></label><button data-hook=\\\"action-delete\\\" class=\\\"destroy\\\"></button></div><input data-hook=\\\"input\\\" class=\\\"edit\\\"/></li>\");;return buf.join(\"\");\n",
    "todomvc.bundle.js[9386:9538]": "\n\t\tvar val = this.mainInput.value.trim();\n\t\tif (e.which === ENTER_KEY && val) {\n\t\t\tapp.me.todos.add({title: val});\n\t\t\tthis.mainInput.value = '';\n\t\t}\n\t",
    "todomvc.bundle.js[9612:9735]": "\n\t\tvar targetState = !app.me.allCompleted;\n\t\tapp.me.todos.each(function (todo) {\n\t\t\ttodo.completed = targetState;\n\t\t});\n\t",
    "todomvc.bundle.js[9796:9833]": "\n\t\tapp.me.todos.clearCompleted();\n\t",
    "todomvc.bundle.js[11399:11632]": "\n\t\t// Render this with template provided.\n\t\t// Note that unlike backbone this includes the root element.\n\t\tthis.renderWithTemplate();\n\t\t// cache reference to `input` for speed/convenience\n\t\tthis.input = this.queryByHook('input');\n\t",
    "todomvc.bundle.js[11670:11717]": "\n\t\tthis.model.completed = e.target.checked;\n\t",
    "todomvc.bundle.js[11751:11779]": "\n\t\tthis.model.destroy();\n\t",
    "todomvc.bundle.js[11852:11907]": "\n\t\tthis.model.editing = true;\n\t\tthis.input.focus();\n\t",
    "todomvc.bundle.js[11939:12098]": "\n\t\tif (e.which === ENTER_KEY) {\n\t\t\tthis.input.blur();\n\t\t} else if (e.which === ESC_KEY) {\n\t\t\tthis.input.value = this.model.title;\n\t\t\tthis.input.blur();\n\t\t}\n\t",
    "todomvc.bundle.js[12213:12369]": "\n\t\tvar val = this.input.value.trim();\n\t\tif (val) {\n\t\t\tthis.model.set({\n\t\t\t\ttitle: val,\n\t\t\t\tediting: false\n\t\t\t});\n\t\t} else {\n\t\t\tthis.model.destroy();\n\t\t}\n\t",
    "todomvc.bundle.js[13303:13305]": "",
    "todomvc.bundle.js[13356:13421]": "\n        return this.model && model instanceof this.model;\n    ",
    "todomvc.bundle.js[13460:13559]": "\n        return this.set(models, extend({merge: false, add: true, remove: false}, options));\n    ",
    "todomvc.bundle.js[13629:13656]": "\n        return res;\n    ",
    "todomvc.bundle.js[13722:14029]": "\n        return this.map(function (model) {\n            if (model.serialize) {\n                return model.serialize();\n            } else {\n                var out = {};\n                extend(out, model);\n                delete out.collection;\n                return out;\n            }\n        });\n    ",
    "todomvc.bundle.js[14056:14096]": "\n        return this.serialize();\n    ",
    "todomvc.bundle.js[14135:18668]": "\n        options = extend({add: true, remove: true, merge: true}, options);\n        if (options.parse) models = this.parse(models, options);\n        var singular = !isArray(models);\n        models = singular ? (models ? [models] : []) : models.slice();\n        var id, model, attrs, existing, sort, i, length;\n        var at = options.at;\n        var sortable = this.comparator && (at == null) && options.sort !== false;\n        var sortAttr = ('string' === typeof this.comparator) ? this.comparator : null;\n        var toAdd = [], toRemove = [], modelMap = {};\n        var add = options.add, merge = options.merge, remove = options.remove;\n        var order = !sortable && add && remove ? [] : false;\n        var targetProto = this.model && this.model.prototype || Object.prototype;\n\n        // Turn bare objects into model references, and prevent invalid models\n        // from being added.\n        for (i = 0, length = models.length; i < length; i++) {\n            attrs = models[i] || {};\n            if (this.isModel(attrs)) {\n                id = model = attrs;\n            } else if (targetProto.generateId) {\n                id = targetProto.generateId(attrs);\n            } else {\n                id = attrs[targetProto.idAttribute || this.mainIndex];\n            }\n\n            // If a duplicate is found, prevent it from being added and\n            // optionally merge it into the existing model.\n            if (existing = this.get(id)) {\n                if (remove) modelMap[existing.cid || existing[this.mainIndex]] = true;\n                if (merge) {\n                    attrs = attrs === model ? model.attributes : attrs;\n                    if (options.parse) attrs = existing.parse(attrs, options);\n                    // if this is model\n                    if (existing.set) {\n                        existing.set(attrs, options);\n                        if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n                    } else {\n                        // if not just update the properties\n                        extend(existing, attrs);\n                    }\n                }\n                models[i] = existing;\n\n            // If this is a new, valid model, push it to the `toAdd` list.\n            } else if (add) {\n                model = models[i] = this._prepareModel(attrs, options);\n                if (!model) continue;\n                toAdd.push(model);\n                this._addReference(model, options);\n            }\n\n            // Do not add multiple models with the same `id`.\n            model = existing || model;\n            if (!model) continue;\n            if (order && ((model.isNew && model.isNew() || !model[this.mainIndex]) || !modelMap[model.cid || model[this.mainIndex]])) order.push(model);\n            modelMap[model[this.mainIndex]] = true;\n        }\n\n        // Remove nonexistent models if appropriate.\n        if (remove) {\n            for (i = 0, length = this.length; i < length; i++) {\n                model = this.models[i];\n                if (!modelMap[model.cid || model[this.mainIndex]]) toRemove.push(model);\n            }\n            if (toRemove.length) this.remove(toRemove, options);\n        }\n\n        // See if sorting is needed, update `length` and splice in new models.\n        if (toAdd.length || (order && order.length)) {\n            if (sortable) sort = true;\n            if (at != null) {\n                for (i = 0, length = toAdd.length; i < length; i++) {\n                    this.models.splice(at + i, 0, toAdd[i]);\n                }\n            } else {\n                var orderedModels = order || toAdd;\n                for (i = 0, length = orderedModels.length; i < length; i++) {\n                    this.models.push(orderedModels[i]);\n                }\n            }\n        }\n\n        // Silently sort the collection if appropriate.\n        if (sort) this.sort({silent: true});\n\n        // Unless silenced, it's time to fire all appropriate add/sort events.\n        if (!options.silent) {\n            for (i = 0, length = toAdd.length; i < length; i++) {\n                model = toAdd[i];\n                if (model.trigger) {\n                    model.trigger('add', model, this, options);\n                } else {\n                    this.trigger('add', model, this, options);\n                }\n            }\n            if (sort || (order && order.length)) this.trigger('sort', this, options);\n        }\n\n        // Return the added (or merged) model (or models).\n        return singular ? models[0] : models;\n    ",
    "todomvc.bundle.js[18708:18900]": "\n        if (!query) return;\n        var index = this._indexes[indexName || this.mainIndex];\n        return index[query] || index[query[this.mainIndex]] || this._indexes.cid[query.cid];\n    ",
    "todomvc.bundle.js[18969:19011]": "\n        return this.models[index];\n    ",
    "todomvc.bundle.js[19053:19915]": "\n        var singular = !isArray(models);\n        var i, length, model, index;\n\n        models = singular ? [models] : slice.call(models);\n        options || (options = {});\n        for (i = 0, length = models.length; i < length; i++) {\n            model = models[i] = this.get(models[i]);\n            if (!model) continue;\n            this._deIndex(model);\n            index = this.models.indexOf(model);\n            this.models.splice(index, 1);\n            if (!options.silent) {\n                options.index = index;\n                if (model.trigger) {\n                    model.trigger('remove', model, this, options);\n                } else {\n                    this.trigger('remove', model, this, options);\n                }\n            }\n            this._removeReference(model, options);\n        }\n        return singular ? models[0] : models;\n    ",
    "todomvc.bundle.js[20239:20650]": "\n        options || (options = {});\n        for (var i = 0, length = this.models.length; i < length; i++) {\n            this._removeReference(this.models[i], options);\n        }\n        options.previousModels = this.models;\n        this._reset();\n        models = this.add(models, extend({silent: true}, options));\n        if (!options.silent) this.trigger('reset', this, options);\n        return models;\n    ",
    "todomvc.bundle.js[20682:21943]": "\n        var self = this;\n        if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n        options || (options = {});\n\n        if (typeof this.comparator === 'string') {\n            this.models.sort(function (left, right) {\n                if (left.get) {\n                    left = left.get(self.comparator);\n                    right = right.get(self.comparator);\n                } else {\n                    left = left[self.comparator];\n                    right = right[self.comparator];\n                }\n                if (left > right || left === void 0) return 1;\n                if (left < right || right === void 0) return -1;\n                return 0;\n            });\n        } else if (this.comparator.length === 1) {\n            this.models.sort(function (left, right) {\n                left = self.comparator(left);\n                right = self.comparator(right);\n                if (left > right || left === void 0) return 1;\n                if (left < right || right === void 0) return -1;\n                return 0;\n            });\n        } else {\n            this.models.sort(this.comparator.bind(this));\n        }\n\n        if (!options.silent) this.trigger('sort', this, options);\n        return this;\n    ",
    "todomvc.bundle.js[22423:22984]": "\n        // if we haven't defined a constructor, skip this\n        if (!this.model) return attrs;\n\n        if (this.isModel(attrs)) {\n            if (!attrs.collection) attrs.collection = this;\n            return attrs;\n        } else {\n            options = options ? extend({}, options) : {};\n            options.collection = this;\n            var model = new this.model(attrs, options);\n            if (!model.validationError) return model;\n            this.trigger('invalid', this, model.validationError, options);\n            return false;\n        }\n    ",
    "todomvc.bundle.js[23018:23164]": "\n        for (var name in this._indexes) {\n            delete this._indexes[name][model[name] || (model.get && model.get(name))];\n        }\n    ",
    "todomvc.bundle.js[23196:23394]": "\n        for (var name in this._indexes) {\n            var indexVal = model[name] || (model.get && model.get(name));\n            if (indexVal) this._indexes[name][indexVal] = model;\n        }\n    ",
    "todomvc.bundle.js[23507:23663]": "\n        this._index(model);\n        if (!model.collection) model.collection = this;\n        if (model.on) model.on('all', this._onModelEvent, this);\n    ",
    "todomvc.bundle.js[23782:23950]": "\n        if (this === model.collection) delete model.collection;\n        this._deIndex(model);\n        if (model.off) model.off('all', this._onModelEvent, this);\n    ",
    "todomvc.bundle.js[24017:24352]": "\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (model && event === 'change:' + this.mainIndex) {\n            this._deIndex(model);\n            this._index(model);\n        }\n        this.trigger.apply(this, arguments);\n    ",
    "todomvc.bundle.js[28810:29035]": "\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      ",
    "todomvc.bundle.js[30197:30510]": "\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    ",
    "todomvc.bundle.js[30801:31713]": "\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    ",
    "todomvc.bundle.js[32575:32978]": "\n      var listeners = this._listeners;\n      if (!listeners) return this;\n      var deleteListener = !name && !callback;\n      if (typeof name === 'object') callback = this;\n      if (obj) (listeners = {})[obj._listenerId] = obj;\n      for (var id in listeners) {\n        listeners[id].off(name, callback, this);\n        if (deleteListener) delete this._listeners[id];\n      }\n      return this;\n    ",
    "todomvc.bundle.js[35382:35622]": "\n    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n                   'listenToOnce', 'bind', 'unbind'];\n    _.each(exports, function(name) {\n      proto[name] = this[name];\n    }, this);\n    return proto;\n  ",
    "todomvc.bundle.js[35751:35779]": "\n      return Events;\n    ",
    "todomvc.bundle.js[36977:37034]": "\n  return !! val && '[object Array]' == str.call(val);\n",
    "todomvc.bundle.js[38372:38507]": "\n        var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n        return path === this.root && !this.location.search;\n    ",
    "todomvc.bundle.js[38883:39105]": "\n        var path = decodeURI(this.location.pathname + this.location.search);\n        var root = this.root.slice(0, -1);\n        if (!path.indexOf(root)) path = path.slice(root.length);\n        return path.slice(1);\n    ",
    "todomvc.bundle.js[42256:42874]": "\n        // Add a cross-platform `removeEventListener` shim for older browsers.\n        var removeEventListener = window.removeEventListener;\n\n        // Remove window listeners.\n        if (this._hasPushState) {\n            removeEventListener('popstate', this.checkUrl, false);\n        } else if (this._wantsHashChange && this._hasHashChange) {\n            removeEventListener('hashchange', this.checkUrl, false);\n        }\n\n        // Some environments will throw when clearing an undefined interval.\n        if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n        History.started = false;\n    ",
    "todomvc.bundle.js[43229:43355]": "\n        var current = this.getFragment();\n        if (current === this.fragment) return false;\n        this.loadUrl();\n    ",
    "todomvc.bundle.js[44319:45592]": "\n        if (!History.started) return false;\n        if (!options || options === true) options = {trigger: !!options};\n\n        var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n        // Strip the hash and decode for matching.\n        fragment = decodeURI(fragment.replace(pathStripper, ''));\n\n        if (this.fragment === fragment) return;\n        this.fragment = fragment;\n\n        // Don't include a trailing slash on the root.\n        if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n        // If pushState is available, we use it to set the fragment as a real URL.\n        if (this._hasPushState) {\n            this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n            // If hash changes haven't been explicitly disabled, update the hash\n            // fragment to store history.\n        } else if (this._wantsHashChange) {\n            this._updateHash(this.location, fragment, options.replace);\n            // If you've told us that you explicitly don't want fallback hashchange-\n            // based history, then `navigate` becomes a page refresh.\n        } else {\n            return this.location.assign(url);\n        }\n        if (options.trigger) return this.loadUrl(fragment);\n    ",
    "todomvc.bundle.js[45771:46068]": "\n        if (replace) {\n            var href = location.href.replace(/(javascript:|#).*$/, '');\n            location.replace(href + '#' + fragment);\n        } else {\n            // Some browsers require that `hash` contains a leading #.\n            location.hash = '#' + fragment;\n        }\n    ",
    "todomvc.bundle.js[48749:48827]": "\n        this.history.navigate(fragment, options);\n        return this;\n    ",
    "todomvc.bundle.js[48989:49059]": "\n        this.navigate(newUrl, {replace: true, trigger: true});\n    ",
    "todomvc.bundle.js[49883:49952]": "\n                return optional ? match : '([^/?]+)';\n            ",
    "todomvc.bundle.js[50897:50927]": "\nmodule.exports=require(13)\n",
    "todomvc.bundle.js[50968:50998]": "\nmodule.exports=require(11)\n",
    "todomvc.bundle.js[52883:53000]": "\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  ",
    "todomvc.bundle.js[54535:54815]": "\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results.push(iterator.call(context, value, index, list));\n    });\n    return results;\n  ",
    "todomvc.bundle.js[55117:55663]": "\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  ",
    "todomvc.bundle.js[55874:56626]": "\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  ",
    "todomvc.bundle.js[56761:56963]": "\n    var result;\n    any(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  ",
    "todomvc.bundle.js[57170:57475]": "\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);\n    each(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) results.push(value);\n    });\n    return results;\n  ",
    "todomvc.bundle.js[57584:57721]": "\n    return _.filter(obj, function(value, index, list) {\n      return !predicate.call(context, value, index, list);\n    }, context);\n  ",
    "todomvc.bundle.js[57930:58292]": "\n    predicate || (predicate = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && predicate.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  ",
    "todomvc.bundle.js[58521:58879]": "\n    predicate || (predicate = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = predicate.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  ",
    "todomvc.bundle.js[59034:59241]": "\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  ",
    "todomvc.bundle.js[59348:59548]": "\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  ",
    "todomvc.bundle.js[59659:59704]": "\n    return _.map(obj, _.property(key));\n  ",
    "todomvc.bundle.js[59866:59915]": "\n    return _.filter(obj, _.matches(attrs));\n  ",
    "todomvc.bundle.js[60081:60128]": "\n    return _.find(obj, _.matches(attrs));\n  ",
    "todomvc.bundle.js[60381:60827]": "\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    var result = -Infinity, lastComputed = -Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      if (computed > lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  ",
    "todomvc.bundle.js[60937:61381]": "\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    var result = Infinity, lastComputed = Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      if (computed < lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  ",
    "todomvc.bundle.js[61547:61775]": "\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  ",
    "todomvc.bundle.js[61996:62192]": "\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  ",
    "todomvc.bundle.js[62290:62410]": "\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return value;\n    return _.property(value);\n  ",
    "todomvc.bundle.js[62529:63037]": "\n    iterator = lookupIterator(iterator);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  ",
    "todomvc.bundle.js[63187:63431]": "\n      var result = {};\n      iterator = lookupIterator(iterator);\n      each(obj, function(value, index) {\n        var key = iterator.call(context, value, index, obj);\n        behavior(result, key, value);\n      });\n      return result;\n    ",
    "todomvc.bundle.js[63627:63706]": "\n    _.has(result, key) ? result[key].push(value) : result[key] = [value];\n  ",
    "todomvc.bundle.js[63896:63926]": "\n    result[key] = value;\n  ",
    "todomvc.bundle.js[64138:64201]": "\n    _.has(result, key) ? result[key]++ : result[key] = 1;\n  ",
    "todomvc.bundle.js[64415:64706]": "\n    iterator = lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  ",
    "todomvc.bundle.js[64799:64970]": "\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  ",
    "todomvc.bundle.js[65047:65158]": "\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  ",
    "todomvc.bundle.js[65451:65603]": "\n    if (array == null) return void 0;\n    if ((n == null) || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  ",
    "todomvc.bundle.js[65890:65975]": "\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  ",
    "todomvc.bundle.js[66652:66717]": "\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  ",
    "todomvc.bundle.js[66796:66841]": "\n    return _.filter(array, _.identity);\n  ",
    "todomvc.bundle.js[66957:67303]": "\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    each(input, function(value) {\n      if (_.isArray(value) || _.isArguments(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  ",
    "todomvc.bundle.js[67424:67469]": "\n    return flatten(array, shallow, []);\n  ",
    "todomvc.bundle.js[67583:67646]": "\n    return _.difference(array, slice.call(arguments, 1));\n  ",
    "todomvc.bundle.js[67843:67994]": "\n    var pass = [], fail = [];\n    each(array, function(elem) {\n      (predicate(elem) ? pass : fail).push(elem);\n    });\n    return [pass, fail];\n  ",
    "todomvc.bundle.js[68234:68703]": "\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  ",
    "todomvc.bundle.js[68837:68889]": "\n    return _.uniq(_.flatten(arguments, true));\n  ",
    "todomvc.bundle.js[69020:69221]": "\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.contains(other, item);\n      });\n    });\n  ",
    "todomvc.bundle.js[69398:69551]": "\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  ",
    "todomvc.bundle.js[69678:69896]": "\n    var length = _.max(_.pluck(arguments, 'length').concat(0));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, '' + i);\n    }\n    return results;\n  ",
    "todomvc.bundle.js[70126:70392]": "\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  ",
    "todomvc.bundle.js[70851:71345]": "\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  ",
    "todomvc.bundle.js[71466:71807]": "\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  ",
    "todomvc.bundle.js[72062:72396]": "\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(length);\n\n    while(idx < length) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  ",
    "todomvc.bundle.js[72536:72538]": "",
    "todomvc.bundle.js[72994:73340]": "\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor;\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    ",
    "todomvc.bundle.js[73614:74000]": "\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  ",
    "todomvc.bundle.js[74227:74440]": "\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) throw new Error('bindAll must be passed function names');\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  ",
    "todomvc.bundle.js[74539:74765]": "\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  ",
    "todomvc.bundle.js[74914:75035]": "\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  ",
    "todomvc.bundle.js[75157:75235]": "\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  ",
    "todomvc.bundle.js[75670:76503]": "\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  ",
    "todomvc.bundle.js[76830:77545]": "\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  ",
    "todomvc.bundle.js[77708:77897]": "\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  ",
    "todomvc.bundle.js[78124:78166]": "\n    return _.partial(wrapper, func);\n  ",
    "todomvc.bundle.js[78333:78551]": "\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  ",
    "todomvc.bundle.js[78667:78780]": "\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  ",
    "todomvc.bundle.js[79228:79423]": "\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = new Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  ",
    "todomvc.bundle.js[79512:79715]": "\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = new Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  ",
    "todomvc.bundle.js[80971:81168]": "\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  ",
    "todomvc.bundle.js[81253:81471]": "\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  ",
    "todomvc.bundle.js[81555:81659]": "\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  ",
    "todomvc.bundle.js[81911:81954]": "\n    interceptor(obj);\n    return obj;\n  ",
    "todomvc.bundle.js[82058:85850]": "\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                             _.isFunction(bCtor) && (bCtor instanceof bCtor))\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  ",
    "todomvc.bundle.js[85948:85982]": "\n    return eq(a, b, [], []);\n  ",
    "todomvc.bundle.js[86118:86302]": "\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  ",
    "todomvc.bundle.js[86372:86419]": "\n    return !!(obj && obj.nodeType === 1);\n  ",
    "todomvc.bundle.js[86546:86602]": "\n    return toString.call(obj) == '[object Array]';\n  ",
    "todomvc.bundle.js[87198:87251]": "\n      return !!(obj && _.has(obj, 'callee'));\n    ",
    "todomvc.bundle.js[87494:87552]": "\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  ",
    "todomvc.bundle.js[87666:87714]": "\n    return _.isNumber(obj) && obj != +obj;\n  ",
    "todomvc.bundle.js[87780:87871]": "\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  ",
    "todomvc.bundle.js[87938:87968]": "\n    return obj === null;\n  ",
    "todomvc.bundle.js[88039:88071]": "\n    return obj === void 0;\n  ",
    "todomvc.bundle.js[88235:88282]": "\n    return hasOwnProperty.call(obj, key);\n  ",
    "todomvc.bundle.js[88506:88561]": "\n    root._ = previousUnderscore;\n    return this;\n  ",
    "todomvc.bundle.js[88657:88680]": "\n    return value;\n  ",
    "todomvc.bundle.js[88714:88771]": "\n    return function () {\n      return value;\n    };\n  ",
    "todomvc.bundle.js[88803:88865]": "\n    return function(obj) {\n      return obj[key];\n    };\n  ",
    "todomvc.bundle.js[88992:89226]": "\n    return function(obj) {\n      if (obj === attrs) return true; //avoid comparing an object to itself.\n      for (var key in attrs) {\n        if (attrs[key] !== obj[key])\n          return false;\n      }\n      return true;\n    }\n  ",
    "todomvc.bundle.js[89305:89437]": "\n    var accum = Array(Math.max(0, n));\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  ",
    "todomvc.bundle.js[89534:89662]": "\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  ",
    "todomvc.bundle.js[89771:89803]": " return new Date().getTime(); ",
    "todomvc.bundle.js[90465:90636]": "\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    ",
    "todomvc.bundle.js[91163:91300]": "\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      ",
    "todomvc.bundle.js[92606:94421]": "\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  ",
    "todomvc.bundle.js[94515:94547]": "\n    return _(obj).chain();\n  ",
    "todomvc.bundle.js[94884:94936]": "\n    return this._chain ? _(obj).chain() : obj;\n  ",
    "todomvc.bundle.js[95231:95426]": "\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    ",
    "todomvc.bundle.js[95612:95691]": "\n      return result.call(this, method.apply(this._wrapped, arguments));\n    ",
    "todomvc.bundle.js[95800:95852]": "\n      this._chain = true;\n      return this;\n    ",
    "todomvc.bundle.js[95939:95974]": "\n      return this._wrapped;\n    ",
    "todomvc.bundle.js[96587:96610]": "\n      return _;\n    ",
    "todomvc.bundle.js[98033:98061]": "\n        return this;\n    ",
    "todomvc.bundle.js[98191:98237]": "\n        return this[this.idAttribute];\n    ",
    "todomvc.bundle.js[98388:98441]": "\n        return this[this.namespaceAttribute];\n    ",
    "todomvc.bundle.js[98577:98625]": "\n        return this[this.typeAttribute];\n    ",
    "todomvc.bundle.js[98732:98776]": "\n        return this.getId() == null;\n    ",
    "todomvc.bundle.js[98850:98898]": "\n        return _.escape(this.get(attr));\n    ",
    "todomvc.bundle.js[98990:99077]": "\n        return this._validate({}, _.extend(options || {}, { validate: true }));\n    ",
    "todomvc.bundle.js[99232:99260]": "\n        return resp;\n    ",
    "todomvc.bundle.js[99421:99748]": "\n        var res = this.getAttributes({props: true}, true);\n        _.each(this._children, function (value, key) {\n            res[key] = this[key].serialize();\n        }, this);\n        _.each(this._collections, function (value, key) {\n            res[key] = this[key].serialize();\n        }, this);\n        return res;\n    ",
    "todomvc.bundle.js[105317:105351]": "\n        return this[attr];\n    ",
    "todomvc.bundle.js[105486:106052]": "\n        var def = this._definition[property];\n        if (def.type === 'boolean') {\n            // if it's a bool, just flip it\n            this[property] = !this[property];\n        } else if (def && def.values) {\n            // If it's a property with an array of values\n            // skip to the next one looping back if at end.\n            this[property] = arrayNext(def.values, this[property]);\n        } else {\n            throw new TypeError('Can only toggle properties that are type `boolean` or have `values` array.');\n        }\n        return this;\n    ",
    "todomvc.bundle.js[106190:106247]": "\n        return _.clone(this._previousAttributes);\n    ",
    "todomvc.bundle.js[106439:106549]": "\n        if (attr == null) return !_.isEmpty(this._changed);\n        return _.has(this._changed, attr);\n    ",
    "todomvc.bundle.js[107017:107533]": "\n        if (!diff) return this.hasChanged() ? _.clone(this._changed) : false;\n        var val, changed = false;\n        var old = this._changing ? this._previousAttributes : this.attributes;\n        var def, isEqual;\n        for (var attr in diff) {\n            def = this._definition[attr];\n            isEqual = this._getCompareForType(def && def.type);\n            if (isEqual(old[attr], (val = diff[attr]))) continue;\n            (changed || (changed = {}))[attr] = val;\n        }\n        return changed;\n    ",
    "todomvc.bundle.js[107560:107600]": "\n        return this.serialize();\n    ",
    "todomvc.bundle.js[107639:107960]": "\n        var def = this._definition[attr];\n        var type = def.type;\n        var val;\n        if (def.required) {\n            val = _.result(def, 'default');\n            return this.set(attr, val, options);\n        } else {\n            return this.set(attr, val, _.extend({}, options, {unset: true}));\n        }\n    ",
    "todomvc.bundle.js[107993:108153]": "\n        var self = this;\n        _.each(_.keys(this.attributes), function (key) {\n            self.unset(key, options);\n        });\n        return this;\n    ",
    "todomvc.bundle.js[108186:108328]": "\n        if (attr == null || !Object.keys(this._previousAttributes).length) return null;\n        return this._previousAttributes[attr];\n    ",
    "todomvc.bundle.js[108416:108514]": "\n        var dataType = this._dataTypes[type];\n        return dataType && dataType.default;\n    ",
    "todomvc.bundle.js[109412:109489]": "\n        return createPropertyDefinition(this, name, desc, isSession);\n    ",
    "todomvc.bundle.js[113303:113579]": "\n        var attrs = this.attributes; // should include session\n        for (var def in this._definition) {\n            if (this._definition[def].required && typeof attrs[def] === 'undefined') {\n                return false;\n            }\n        }\n        return true;\n    ",
    "todomvc.bundle.js[113819:113976]": "\n            return this.getAttributes({\n                session: true,\n                props: true,\n                derived: true\n            });\n        ",
    "todomvc.bundle.js[114024:114040]": " return true; ",
    "todomvc.bundle.js[114067:114070]": " ",
    "todomvc.bundle.js[116839:116951]": "\n            throw new TypeError('\"' + name + '\" is a derived property, it can\\'t be set directly.');\n        ",
    "todomvc.bundle.js[117024:117058]": "\n            return '';\n        ",
    "todomvc.bundle.js[117109:117768]": "\n            var newType;\n            if (!_.isDate(newVal)) {\n                try {\n                    newVal = new Date(parseInt(newVal, 10));\n                    if (!_.isDate(newVal)) throw TypeError;\n                    newVal = newVal.valueOf();\n                    if (_.isNaN(newVal)) throw TypeError;\n                    newType = 'date';\n                } catch (e) {\n                    newType = typeof newVal;\n                }\n            } else {\n                newType = 'date';\n                newVal = newVal.valueOf();\n            }\n            return {\n                val: newVal,\n                type: newType\n            };\n        ",
    "todomvc.bundle.js[117798:117843]": "\n            return new Date(val);\n        ",
    "todomvc.bundle.js[117874:117916]": "\n            return new Date();\n        ",
    "todomvc.bundle.js[117968:118110]": "\n            return {\n                val: newVal,\n                type: _.isArray(newVal) ? 'array' : typeof newVal\n            };\n        ",
    "todomvc.bundle.js[118141:118175]": "\n            return [];\n        ",
    "todomvc.bundle.js[118228:118730]": "\n            var newType = typeof newVal;\n            // we have to have a way of supporting \"missing\" objects.\n            // Null is an object, but setting a value to undefined\n            // should work too, IMO. We just override it, in that case.\n            if (newType !== 'object' && _.isUndefined(newVal)) {\n                newVal = null;\n                newType = 'object';\n            }\n            return {\n                val: newVal,\n                type: newType\n            };\n        ",
    "todomvc.bundle.js[118761:118795]": "\n            return {};\n        ",
    "todomvc.bundle.js[122851:122937]": "\n                    child.prototype._children[name] = constructor;\n                ",
    "todomvc.bundle.js[123502:123656]": "\n    var len = array.length;\n    var newIndex = array.indexOf(currentItem) + 1;\n    if (newIndex > (len - 1)) newIndex = 0;\n    return array[newIndex];\n",
    "todomvc.bundle.js[123701:123731]": "\nmodule.exports=require(11)\n",
    "todomvc.bundle.js[124174:124436]": "\n    var path, arr;\n    for (path in this.storage) {\n        arr = this.storage[path];\n        arr.some(function (item, index) {\n            if (item === obj) {\n                arr.splice(index, 1);\n                return true;\n            }\n        });\n    }\n",
    "todomvc.bundle.js[126933:126984]": "\n        return func.call(context, value);\n      ",
    "todomvc.bundle.js[127030:127088]": "\n        return func.call(context, value, other);\n      ",
    "todomvc.bundle.js[127146:127216]": "\n        return func.call(context, value, index, collection);\n      ",
    "todomvc.bundle.js[127287:127370]": "\n        return func.call(context, accumulator, value, index, collection);\n      ",
    "todomvc.bundle.js[127400:127452]": "\n      return func.apply(context, arguments);\n    ",
    "todomvc.bundle.js[128766:129190]": "\n    if (obj == null) return [];\n    iteratee = _.iteratee(iteratee, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length),\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  ",
    "todomvc.bundle.js[129430:129959]": "\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index = 0, currentKey;\n    if (arguments.length < 3) {\n      if (!length) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[index++] : index++];\n    }\n    for (; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  ",
    "todomvc.bundle.js[130098:130599]": "\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== + obj.length && _.keys(obj),\n        index = (keys || obj).length,\n        currentKey;\n    if (arguments.length < 3) {\n      if (!index) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[--index] : --index];\n    }\n    while (index--) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  ",
    "todomvc.bundle.js[130734:130973]": "\n    var result;\n    predicate = _.iteratee(predicate, context);\n    _.some(obj, function(value, index, list) {\n      if (predicate(value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  ",
    "todomvc.bundle.js[131267:131336]": "\n      if (predicate(value, index, list)) results.push(value);\n    ",
    "todomvc.bundle.js[131471:131544]": "\n    return _.filter(obj, _.negate(_.iteratee(predicate)), context);\n  ",
    "todomvc.bundle.js[132239:132637]": "\n    if (obj == null) return false;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  ",
    "todomvc.bundle.js[133036:133236]": "\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  ",
    "todomvc.bundle.js[133347:133392]": "\n    return _.map(obj, _.property(key));\n  ",
    "todomvc.bundle.js[133554:133603]": "\n    return _.filter(obj, _.matches(attrs));\n  ",
    "todomvc.bundle.js[133769:133816]": "\n    return _.find(obj, _.matches(attrs));\n  ",
    "todomvc.bundle.js[133926:134629]": "\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  ",
    "todomvc.bundle.js[134739:135438]": "\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  ",
    "todomvc.bundle.js[135608:135959]": "\n    var set = obj && obj.length === +obj.length ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  ",
    "todomvc.bundle.js[136180:136376]": "\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  ",
    "todomvc.bundle.js[136495:136994]": "\n    iteratee = _.iteratee(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  ",
    "todomvc.bundle.js[137144:137381]": "\n      var result = {};\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    ",
    "todomvc.bundle.js[137577:137663]": "\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  ",
    "todomvc.bundle.js[137853:137883]": "\n    result[key] = value;\n  ",
    "todomvc.bundle.js[138102:138172]": "\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  ",
    "todomvc.bundle.js[138386:138662]": "\n    iteratee = _.iteratee(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = low + high >>> 1;\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  ",
    "todomvc.bundle.js[138755:138926]": "\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  ",
    "todomvc.bundle.js[139003:139112]": "\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  ",
    "todomvc.bundle.js[139320:139542]": "\n    predicate = _.iteratee(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  ",
    "todomvc.bundle.js[139835:139985]": "\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  ",
    "todomvc.bundle.js[140272:140368]": "\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  ",
    "todomvc.bundle.js[140562:140726]": "\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  ",
    "todomvc.bundle.js[141043:141106]": "\n    return slice.call(array, n == null || guard ? 1 : n);\n  ",
    "todomvc.bundle.js[141185:141230]": "\n    return _.filter(array, _.identity);\n  ",
    "todomvc.bundle.js[141923:141975]": "\n    return flatten(array, shallow, false, []);\n  ",
    "todomvc.bundle.js[142089:142152]": "\n    return _.difference(array, slice.call(arguments, 1));\n  ",
    "todomvc.bundle.js[143474:143885]": "\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  ",
    "todomvc.bundle.js[144172:144218]": "\n      return !_.contains(rest, value);\n    ",
    "todomvc.bundle.js[144356:144587]": "\n    if (array == null) return [];\n    var length = _.max(arguments, 'length').length;\n    var results = Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, i);\n    }\n    return results;\n  ",
    "todomvc.bundle.js[144817:145083]": "\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  ",
    "todomvc.bundle.js[145813:146061]": "\n    if (array == null) return -1;\n    var idx = array.length;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  ",
    "todomvc.bundle.js[146316:146632]": "\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  ",
    "todomvc.bundle.js[146772:146774]": "",
    "todomvc.bundle.js[147260:147599]": "\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      Ctor.prototype = func.prototype;\n      var self = new Ctor;\n      Ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (_.isObject(result)) return result;\n      return self;\n    ",
    "todomvc.bundle.js[147961:148272]": "\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    ",
    "todomvc.bundle.js[148504:148754]": "\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  ",
    "todomvc.bundle.js[148853:149151]": "\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = hasher ? hasher.apply(this, arguments) : key;\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  ",
    "todomvc.bundle.js[149300:149431]": "\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  ",
    "todomvc.bundle.js[149553:149631]": "\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  ",
    "todomvc.bundle.js[150066:150948]": "\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  ",
    "todomvc.bundle.js[151275:151999]": "\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last > 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  ",
    "todomvc.bundle.js[152226:152268]": "\n    return _.partial(wrapper, func);\n  ",
    "todomvc.bundle.js[152363:152447]": "\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  ",
    "todomvc.bundle.js[152614:152861]": "\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  ",
    "todomvc.bundle.js[152977:153090]": "\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  ",
    "todomvc.bundle.js[153208:153390]": "\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      } else {\n        func = null;\n      }\n      return memo;\n    };\n  ",
    "todomvc.bundle.js[154008:154199]": "\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  ",
    "todomvc.bundle.js[154288:154487]": "\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  ",
    "todomvc.bundle.js[155597:156143]": "\n    var result = {}, key;\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      iteratee = createCallback(iteratee, context);\n      for (key in obj) {\n        var value = obj[key];\n        if (iteratee(value, key, obj)) result[key] = value;\n      }\n    } else {\n      var keys = concat.apply([], slice.call(arguments, 1));\n      obj = new Object(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        key = keys[i];\n        if (key in obj) result[key] = obj[key];\n      }\n    }\n    return result;\n  ",
    "todomvc.bundle.js[156260:156562]": "\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  ",
    "todomvc.bundle.js[156996:157100]": "\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  ",
    "todomvc.bundle.js[157352:157395]": "\n    interceptor(obj);\n    return obj;\n  ",
    "todomvc.bundle.js[161450:161656]": "\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  ",
    "todomvc.bundle.js[161726:161773]": "\n    return !!(obj && obj.nodeType === 1);\n  ",
    "todomvc.bundle.js[161900:161957]": "\n    return toString.call(obj) === '[object Array]';\n  ",
    "todomvc.bundle.js[162613:162655]": "\n      return _.has(obj, 'callee');\n    ",
    "todomvc.bundle.js[162930:162988]": "\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  ",
    "todomvc.bundle.js[163102:163151]": "\n    return _.isNumber(obj) && obj !== +obj;\n  ",
    "todomvc.bundle.js[163673:163735]": "\n    return obj != null && hasOwnProperty.call(obj, key);\n  ",
    "todomvc.bundle.js[163959:164014]": "\n    root._ = previousUnderscore;\n    return this;\n  ",
    "todomvc.bundle.js[164110:164133]": "\n    return value;\n  ",
    "todomvc.bundle.js[164167:164223]": "\n    return function() {\n      return value;\n    };\n  ",
    "todomvc.bundle.js[164247:164249]": "",
    "todomvc.bundle.js[164281:164343]": "\n    return function(obj) {\n      return obj[key];\n    };\n  ",
    "todomvc.bundle.js[164470:164809]": "\n    var pairs = _.pairs(attrs), length = pairs.length;\n    return function(obj) {\n      if (obj == null) return !length;\n      obj = new Object(obj);\n      for (var i = 0; i < length; i++) {\n        var pair = pairs[i], key = pair[0];\n        if (pair[1] !== obj[key] || !(key in obj)) return false;\n      }\n      return true;\n    };\n  ",
    "todomvc.bundle.js[164888:165059]": "\n    var accum = Array(Math.max(0, n));\n    iteratee = createCallback(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  ",
    "todomvc.bundle.js[165156:165284]": "\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  ",
    "todomvc.bundle.js[165393:165431]": "\n    return new Date().getTime();\n  ",
    "todomvc.bundle.js[165802:165834]": "\n      return map[match];\n    ",
    "todomvc.bundle.js[166062:166207]": "\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    ",
    "todomvc.bundle.js[167651:167690]": "\n    return '\\\\' + escapes[match];\n  ",
    "todomvc.bundle.js[168023:169885]": "\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  ",
    "todomvc.bundle.js[169987:170068]": "\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  ",
    "todomvc.bundle.js[171117:171314]": "\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    ",
    "todomvc.bundle.js[171502:171581]": "\n      return result.call(this, method.apply(this._wrapped, arguments));\n    ",
    "todomvc.bundle.js[171683:171714]": "\n    return this._wrapped;\n  ",
    "todomvc.bundle.js[172321:172344]": "\n      return _;\n    ",
    "todomvc.bundle.js[173077:173145]": "\n        this._addFilter(filter);\n        this._runFilters();\n    ",
    "todomvc.bundle.js[173223:173294]": "\n        this._removeFilter(filter);\n        this._runFilters();\n    ",
    "todomvc.bundle.js[173761:173871]": "\n        if (clear) this._resetFilters();\n        this._parseFilters(opts);\n        this._runFilters();\n    ",
    "todomvc.bundle.js[173936:173978]": "\n        return this.models[index];\n    ",
    "todomvc.bundle.js[174073:174196]": "\n        var model = this.collection.get(query, indexName);\n        if (model && this.contains(model)) return model;\n    ",
    "todomvc.bundle.js[174266:174406]": "\n        var index = this._filters.indexOf(filter);\n        if (index !== -1) {\n            this._filters.splice(index, 1);\n        }\n    ",
    "todomvc.bundle.js[174837:174880]": "\n        this._filters.push(filter);\n    ",
    "todomvc.bundle.js[174986:175074]": "\n        this._watched = _.union(this._watched, _.isArray(item) ? item : [item]);\n    ",
    "todomvc.bundle.js[175141:175204]": "\n        this._watched = _.without(this._watched, item);\n    ",
    "todomvc.bundle.js[175324:175492]": "\n                this._addFilter(function (model) {\n                    return (model.get ? model.get(item) : model[item]) === value;\n                });\n            ",
    "todomvc.bundle.js[176480:176552]": "\n                return startingArray.filter(filterFunc);\n            ",
    "todomvc.bundle.js[177147:177207]": "\n            this.trigger('remove', model, this);\n        ",
    "todomvc.bundle.js[177256:177313]": "\n            this.trigger('add', model, this);\n        ",
    "todomvc.bundle.js[177561:178038]": "\n        // conditions under which we should re-run filters\n        if (_.contains(this._watched, eventName.split(':')[1]) || _.contains(['add', 'remove', 'reset', 'sync'], eventName)) {\n            this._runFilters();\n        }\n        // conditions under which we should proxy the events\n        if ((_.contains(['sync', 'invalid', 'destroy']) || eventName.indexOf('change') !== -1) && this.contains(model)) {\n            this.trigger.apply(this, arguments);\n        }\n    ",
    "todomvc.bundle.js[178124:178166]": "\n        return this.models.length;\n    ",
    "todomvc.bundle.js[178258:178286]": "\n        return true;\n    ",
    "todomvc.bundle.js[178611:178641]": "\nmodule.exports=require(13)\n",
    "todomvc.bundle.js[179860:180072]": "\n        var iterator = _.isFunction(value) ? value : function (model) {\n            return model.get ? model.get(value) : model[value];\n        };\n        return _[method](this.models, iterator, context);\n    ",
    "todomvc.bundle.js[180201:180524]": "\n    if (_.isEmpty(attrs)) return first ? void 0 : [];\n    return this[first ? 'find' : 'filter'](function (model) {\n        var value;\n        for (var key in attrs) {\n            value = model.get ? model.get(key) : model[key];\n            if (attrs[key] !== value) return false;\n        }\n        return true;\n    });\n",
    "todomvc.bundle.js[180653:180692]": "\n    return this.where(attrs, true);\n",
    "todomvc.bundle.js[180784:180834]": "\n    return _.invoke(this.models, 'get', attr);\n",
    "todomvc.bundle.js[180920:180950]": "\nmodule.exports=require(11)\n",
    "todomvc.bundle.js[183067:183116]": "\n                return !!this.el;\n            ",
    "todomvc.bundle.js[183204:183256]": "\n                return !!this.model;\n            ",
    "todomvc.bundle.js[184420:184680]": "\n        var res = [];\n        if (!this.el) return res;\n        if (selector === '') return [this.el];\n        if (matches(this.el, selector)) res.push(this.el);\n        return res.concat(Array.prototype.slice.call(this.el.querySelectorAll(selector)));\n    ",
    "todomvc.bundle.js[185137:185139]": "",
    "todomvc.bundle.js[185316:185383]": "\n        this.renderWithTemplate(this);\n        return this;\n    ",
    "todomvc.bundle.js[185525:186269]": "\n        var parsedBindings = this._parsedBindings;\n        if (this.el && this.el.parentNode) this.el.parentNode.removeChild(this.el);\n        if (this._subviews) _.chain(this._subviews).flatten().invoke('remove');\n        this.stopListening();\n        // TODO: Not sure if this is actually necessary.\n        // Just trying to de-reference this potentially large\n        // amount of generated functions to avoid memory leaks.\n        _.each(parsedBindings, function (properties, modelName) {\n            _.each(properties, function (value, key) {\n                delete parsedBindings[modelName][key];\n            });\n            delete parsedBindings[modelName];\n        });\n        this.trigger('remove', this);\n        return this;\n    ",
    "todomvc.bundle.js[188541:188783]": "\n        if (typeof container === 'string') {\n            container = this.query(container);\n        }\n        this.registerSubview(view);\n        view.render();\n        (container || this.el).appendChild(view.el);\n        return view;\n    ",
    "todomvc.bundle.js[189862:190830]": "\n        var self = this;\n        var opts = {\n            selector: subview.container || '[data-hook=\"' + subview.hook + '\"]',\n            waitFor: subview.waitFor || '',\n            prepareView: subview.prepareView || function (el) {\n                return new subview.constructor({\n                    el: el,\n                    parent: self\n                });\n            }\n        };\n        function action() {\n            var el, subview;\n            // if not rendered or we can't find our element, stop here.\n            if (!this.el || !(el = this.query(opts.selector))) return;\n            if (!opts.waitFor || getPath(this, opts.waitFor)) {\n                subview = this[name] = opts.prepareView.call(this, el);\n                subview.render();\n                this.registerSubview(subview);\n                this.off('change', action);\n            }\n        }\n        // we listen for main `change` items\n        this.on('change', action, this);\n    ",
    "todomvc.bundle.js[191226:191773]": "\n        var template = templateArg || this.template;\n        if (!template) throw new Error('Template string or function needed.');\n        var newDom = _.isString(template) ? template : template(context || this);\n        if (_.isString(newDom)) newDom = domify(newDom);\n        var parent = this.el && this.el.parentNode;\n        if (parent) parent.replaceChild(newDom, this.el);\n        if (newDom.nodeName === '#document-fragment') throw new Error('Views can only have one root element.');\n        this.el = newDom;\n        return this;\n    ",
    "todomvc.bundle.js[192555:192654]": "\n        for (var item in hash) {\n            this[item] = this.query(hash[item]);\n        }\n    ",
    "todomvc.bundle.js[192834:192947]": "\n        var bound = _.bind(handler, this);\n        this.listenTo(object, events, bound);\n        bound();\n    ",
    "todomvc.bundle.js[193183:193213]": "\n        this.remove();\n    ",
    "todomvc.bundle.js[195395:195472]": "\n        _.invoke(this.views, 'remove');\n        this.stopListening();\n    ",
    "todomvc.bundle.js[195512:195624]": "\n        return _.find(this.views, function (view) {\n            return model === view.model;\n        });\n    ",
    "todomvc.bundle.js[195668:195927]": "\n        var view = new this.view(_({model: model, collection: this.collection}).extend(this.viewOptions));\n        this.views.push(view);\n        view.parent = this;\n        view.renderedByParentView = true;\n        view.render();\n        return view;\n    ",
    "todomvc.bundle.js[195971:196057]": "\n        return this._getViewByModel(model) || this._createViewForModel(model);\n    ",
    "todomvc.bundle.js[196119:196740]": "\n        var view = this._getViewByModel(model);\n        var matches = this.filter ? this.filter(model) : true;\n        if (!matches) {\n            return;\n        }\n        if (!view) {\n            view = new this.view(_({model: model, collection: this.collection}).extend(this.viewOptions));\n            this.views.push(view);\n            view.parent = this;\n            view.renderedByParentView = true;\n            view.render({containerEl: this.el});\n        }\n        if (options && options.rerender) {\n            this._insertView(view);\n        } else {\n            this._insertViewAtIndex(view);\n        }\n    ",
    "todomvc.bundle.js[196782:197683]": "\n        if (!view.insertSelf) {\n            var pos = this.collection.indexOf(view.model);\n            var modelToInsertBefore, viewToInsertBefore;\n\n            if (this.reverse) {\n                modelToInsertBefore = this.collection.at(pos - 1);\n            } else {\n                modelToInsertBefore = this.collection.at(pos + 1);\n            }\n\n            viewToInsertBefore = this._getViewByModel(modelToInsertBefore);\n\n            // FIX IE bug (https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore)\n            // \"In Internet Explorer an undefined value as referenceElement will throw errors, while in rest of the modern browsers, this works fine.\"\n            if(viewToInsertBefore) {\n                this.el.insertBefore(view.el, viewToInsertBefore && viewToInsertBefore.el);\n            } else {\n                this.el.appendChild(view.el);\n            }\n        }\n    ",
    "todomvc.bundle.js[197718:197969]": "\n        if (!view.insertSelf) {\n            if (this.reverse && this.el.firstChild) {\n                this.el.insertBefore(view.el, this.el.firstChild);\n            } else {\n                this.el.appendChild(view.el);\n            }\n        }\n    ",
    "todomvc.bundle.js[198013:198413]": "\n        var view = this._getViewByModel(model);\n        if (!view) {\n            return;\n        }\n        var index = this.views.indexOf(view);\n        if (index !== -1) {\n            // remove it if we found it calling animateRemove\n            // to give user option of gracefully destroying.\n            view = this.views.splice(index, 1)[0];\n            this._removeView(view);\n        }\n    ",
    "todomvc.bundle.js[198448:198577]": "\n        if (view.animateRemove) {\n            view.animateRemove();\n        } else {\n            view.remove();\n        }\n    ",
    "todomvc.bundle.js[198724:198915]": "\n        options = options || {};\n        this.collection.each(function (model) {\n            this._addViewForModel(model, this, _.extend(options, {rerender: true}));\n        }, this);\n    ",
    "todomvc.bundle.js[198941:199291]": "\n        var newViews = this.collection.map(this._getOrCreateByModel, this);\n\n        //Remove existing views from the ui\n        var toRemove = _.difference(this.views, newViews);\n        toRemove.forEach(this._removeView, this);\n\n        //Rerender the full list with the new views\n        this.views = newViews;\n        this._rerenderAll();\n    ",
    "todomvc.bundle.js[199573:199603]": "\nmodule.exports=require(13)\n",
    "todomvc.bundle.js[200818:201161]": "\n        if (typeof obj !== \"object\" && typeof obj !== \"function\" || obj === null) {\n          throw new TypeError(\"keys() called on a non-object\");\n        }\n        var key, keys = [];\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            keys[keys.length] = key;\n          }\n        }\n        return keys;\n      ",
    "todomvc.bundle.js[201994:202219]": "\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      ",
    "todomvc.bundle.js[202899:203204]": "\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    ",
    "todomvc.bundle.js[203381:203694]": "\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    ",
    "todomvc.bundle.js[203985:204897]": "\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    ",
    "todomvc.bundle.js[205225:205580]": "\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    ",
    "todomvc.bundle.js[205759:206162]": "\n      var listeners = this._listeners;\n      if (!listeners) return this;\n      var deleteListener = !name && !callback;\n      if (typeof name === 'object') callback = this;\n      if (obj) (listeners = {})[obj._listenerId] = obj;\n      for (var id in listeners) {\n        listeners[id].off(name, callback, this);\n        if (deleteListener) delete this._listeners[id];\n      }\n      return this;\n    ",
    "todomvc.bundle.js[206485:206996]": "\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  ",
    "todomvc.bundle.js[207234:207767]": "\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n  ",
    "todomvc.bundle.js[208566:208806]": "\n    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n                   'listenToOnce', 'bind', 'unbind'];\n    _.each(exports, function(name) {\n      proto[name] = this[name];\n    }, this);\n    return proto;\n  ",
    "todomvc.bundle.js[208935:208963]": "\n      return Events;\n    ",
    "todomvc.bundle.js[211231:211408]": "\n            getMatches(el, selector).forEach(function (match) {\n                type(match, value, previousValue);\n            });\n            previousValue = value;\n        ",
    "todomvc.bundle.js[211544:211599]": "\n                dom.text(match, value);\n            ",
    "todomvc.bundle.js[211684:211872]": "\n            getMatches(el, selector).forEach(function (match) {\n                dom.switchClass(match, previousValue, value);\n            });\n            previousValue = value;\n        ",
    "todomvc.bundle.js[212030:212331]": "\n            var names = makeArray(binding.name);\n            getMatches(el, selector).forEach(function (match) {\n                names.forEach(function (name) {\n                    dom.setAttribute(match, name, value);\n                });\n            });\n            previousValue = value;\n        ",
    "todomvc.bundle.js[212404:212735]": "\n            getMatches(el, selector).forEach(function (match) {\n                if (!value && value !== 0) value = '';\n                // only apply bindings if element is not currently focused\n                if (document.activeElement !== match) match.value = value;\n            });\n            previousValue = value;\n        ",
    "todomvc.bundle.js[212981:213439]": "\n                var prevClass = value ? no : yes;\n                var newClass = value ? yes : no;\n                getMatches(el, selector).forEach(function (match) {\n                    prevClass.forEach(function (pc) {\n                        dom.removeClass(match, pc);\n                    });\n                    newClass.forEach(function (nc) {\n                        dom.addClass(match, nc);\n                    });\n                });\n            ",
    "todomvc.bundle.js[213507:213836]": "\n                var name = makeArray(binding.name || keyName);\n                getMatches(el, selector).forEach(function (match) {\n                    name.forEach(function (className) {\n                        dom[value ? 'addClass' : 'removeClass'](match, className);\n                    });\n                });\n            ",
    "todomvc.bundle.js[214418:214712]": "\n                getMatches(el, yes).forEach(function (match) {\n                    dom[value ? 'show' : 'hide'](match);\n                });\n                getMatches(el, no).forEach(function (match) {\n                    dom[value ? 'hide' : 'show'](match);\n                });\n            ",
    "todomvc.bundle.js[215093:215329]": "\n            for (var item in binding.cases) {\n                getMatches(el, binding.cases[item]).forEach(function (match) {\n                    dom[value === item ? 'show' : 'hide'](match);\n                });\n            }\n        ",
    "todomvc.bundle.js[216521:216569]": "\n        el.textContent = getString(val);\n    ",
    "todomvc.bundle.js[217460:217554]": "\n        if (prevCls) this.removeClass(el, prevCls);\n        this.addClass(el, newCls);\n    ",
    "todomvc.bundle.js[218038:218139]": "\n        el.removeAttribute(attr);\n        if (hasBooleanProperty(el, attr)) el[attr] = false;\n    ",
    "todomvc.bundle.js[218574:218599]": "\n        show(el);\n    ",
    "todomvc.bundle.js[218832:218998]": "\n    if (el.classList) {\n        return el.classList.contains(cls);\n    } else {\n        return new RegExp('(^| )' + cls + '( |$)', 'gi').test(el.className);\n    }\n",
    "todomvc.bundle.js[219342:219470]": "\n    el.style.display = dom.getAttribute(el, 'data-anddom-display') || '';\n    dom.removeAttribute(el, 'data-anddom-hidden');\n",
    "todomvc.bundle.js[219978:220240]": "\n    var path, arr;\n    for (path in this.storage) {\n        arr = this.storage[path];\n        arr.some(function (item, index) {\n            if (item === obj) {\n                arr.splice(index, 1);\n                return true;\n            }\n        });\n    }\n",
    "todomvc.bundle.js[220348:220576]": "\n    var res = [];\n    var key;\n\n    for (key in this.storage) {\n        if (!keypath || keypath === key || key.indexOf(keypath + '.') === 0) {\n            res = res.concat(this.storage[key]);\n        }\n    }\n\n    return res;\n",
    "todomvc.bundle.js[221047:221268]": "\n    var res = {};\n    var key;\n\n    for (key in this.storage) {\n        if (keypath === key || key.indexOf(keypath + '.') === 0) {\n            res[key] = slice.call(this.storage[key]);\n        }\n    }\n\n    return res;\n",
    "todomvc.bundle.js[221369:221508]": "\n    var args = slice.call(arguments, 2);\n    this.get(keypath).forEach(function (fn) {\n        fn.apply(context || this, args);\n    });\n",
    "todomvc.bundle.js[223292:224303]": "\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n",
    "todomvc.bundle.js[226092:226179]": "\n    var a = [].slice.call(arguments).concat(args);\n    obj[method].apply(obj, a);\n  ",
    "todomvc.bundle.js[227604:227740]": "\n  var bindings = this._events[event];\n  if (!bindings) return;\n\n  for (var method in bindings) {\n    this.unbind(event, method);\n  }\n",
    "todomvc.bundle.js[228796:228863]": "\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n",
    "todomvc.bundle.js[229620:229770]": "\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) fn.call(el, e);\n  ",
    "todomvc.bundle.js[230000:230106]": "\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\n\n  event.unbind(el, type, fn, capture);\n",
    "todomvc.bundle.js[230278:230467]": "\n  var parent = checkYoSelf ? element : element.parentNode\n\n  while (parent && parent !== document) {\n    if (matches(parent, selector)) return parent;\n    parent = parent.parentNode\n  }\n",
    "todomvc.bundle.js[230996:231203]": "\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n",
    "todomvc.bundle.js[233205:233490]": "\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  ",
    "todomvc.bundle.js[233523:233803]": "\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  ",
    "todomvc.bundle.js[233915:233950]": "\n    return new Date().getTime()\n",
    "todomvc.bundle.js[234552:234586]": "var n=t[o][1][e];return s(n?n:e)",
    "todomvc.bundle.js[235084:235571]": "\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n  var ac = a['class'];\n  var bc = b['class'];\n\n  if (ac || bc) {\n    ac = ac || [];\n    bc = bc || [];\n    if (!Array.isArray(ac)) ac = [ac];\n    if (!Array.isArray(bc)) bc = [bc];\n    a['class'] = ac.concat(bc).filter(nulls);\n  }\n\n  for (var key in b) {\n    if (key != 'class') {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n",
    "todomvc.bundle.js[235684:235723]": "\n  return val != null && val !== '';\n",
    "todomvc.bundle.js[235861:235946]": "\n  return Array.isArray(val) ? val.map(joinClasses).filter(nulls).join(' ') : val;\n",
    "todomvc.bundle.js[236115:236453]": "\n  var buf = [];\n  for (var i = 0; i < classes.length; i++) {\n    if (escaped && escaped[i]) {\n      buf.push(exports.escape(joinClasses([classes[i]])));\n    } else {\n      buf.push(joinClasses(classes[i]));\n    }\n  }\n  var text = joinClasses(buf);\n  if (text.length) {\n    return ' class=\"' + text + '\"';\n  } else {\n    return '';\n  }\n",
    "todomvc.bundle.js[236673:237119]": "\n  if ('boolean' == typeof val || null == val) {\n    if (val) {\n      return ' ' + (terse ? key : key + '=\"' + key + '\"');\n    } else {\n      return '';\n    }\n  } else if (0 == key.indexOf('data') && 'string' != typeof val) {\n    return ' ' + key + \"='\" + JSON.stringify(val).replace(/'/g, '&apos;') + \"'\";\n  } else if (escaped) {\n    return ' ' + key + '=\"' + exports.escape(val) + '\"';\n  } else {\n    return ' ' + key + '=\"' + val + '\"';\n  }\n",
    "todomvc.bundle.js[237284:237691]": "\n  var buf = [];\n\n  var keys = Object.keys(obj);\n\n  if (keys.length) {\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i]\n        , val = obj[key];\n\n      if ('class' == key) {\n        if (val = joinClasses(val)) {\n          buf.push(' ' + key + '=\"' + val + '\"');\n        }\n      } else {\n        buf.push(exports.attr(key, val, false, terse));\n      }\n    }\n  }\n\n  return buf.join('');\n",
    "todomvc.bundle.js[237842:238048]": "\n  var result = String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n  if (result === '' + html) return html;\n  else return result;\n",
    "todomvc.bundle.js[238312:239125]": "\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || _dereq_('fs').readFileSync(filename, 'utf8')\n  } catch (ex) {\n    rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Jade') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n",
    "todomvc.bundle.js[239175:239179]": "\n\n"
}