// LACUNA LAZY LOAD FALLBACK
function lacuna_lazy_load(id, callback){
    fetch("http://127.0.0.1:8125/lazyload/", {
        method: "POST",
        headers: { "Accept": "application/json", "Content-Type": "application/json" },
        body: JSON.stringify({id})
    }).then(response => {
        return response.text();
    }).then(callback);
}


//
// Generated on Tue Dec 16 2014 12:13:47 GMT+0100 (CET) by Charlie Robbins, Paolo Fragomeni & the Contributors (Using Codesurgeon).
// Version 1.2.6
//

(function (exports) {

/*
 * browser.js: Browser specific functionality for director.
 *
 * (C) 2011, Charlie Robbins, Paolo Fragomeni, & the Contributors.
 * MIT LICENSE
 *
 */

var dloc = document.location;

function dlocHashEmpty() {lacuna_lazy_load("node_modules/director/build/director.js[393:554]", functionData => eval(functionData))}

var listener = {
  mode: 'modern',
  hash: dloc.hash,
  history: false,

  check: function () {lacuna_lazy_load("node_modules/director/build/director.js[650:759]", functionData => eval(functionData))},

  fire: function () {lacuna_lazy_load("node_modules/director/build/director.js[782:947]", functionData => eval(functionData))},

  init: function (fn, history) {lacuna_lazy_load("node_modules/director/build/director.js[981:2852]", functionData => eval(functionData))},

  destroy: function (fn) {lacuna_lazy_load("node_modules/director/build/director.js[2880:3118]", functionData => eval(functionData))},

  setHash: function (s) {lacuna_lazy_load("node_modules/director/build/director.js[3145:3567]", functionData => eval(functionData))},

  writeFrame: function (s) {lacuna_lazy_load("node_modules/director/build/director.js[3597:3851]", functionData => eval(functionData))},

  syncHash: function () {lacuna_lazy_load("node_modules/director/build/director.js[3878:3998]", functionData => eval(functionData))},

  onHashChanged: function () {lacuna_lazy_load("node_modules/director/build/director.js[4030:4032]", functionData => eval(functionData))}
};

var Router = exports.Router = function (routes) {lacuna_lazy_load("node_modules/director/build/director.js[4085:4493]", functionData => eval(functionData))};

Router.prototype.init = function (r) {lacuna_lazy_load("node_modules/director/build/director.js[4533:5697]", functionData => eval(functionData))};

Router.prototype.explode = function () {lacuna_lazy_load("node_modules/director/build/director.js[5739:5890]", functionData => eval(functionData))};

Router.prototype.setRoute = function (i, v, val) {lacuna_lazy_load("node_modules/director/build/director.js[5942:6195]", functionData => eval(functionData))};

//
// ### function insertEx(method, path, route, parent)
// #### @method {string} Method to insert the specific `route`.
// #### @path {Array} Parsed path to insert the `route` at.
// #### @route {Array|function} Route handlers to insert.
// #### @parent {Object} **Optional** Parent "routes" to insert into.
// insert a callback that will only occur once per the matched route.
//
Router.prototype.insertEx = function(method, path, route, parent) {lacuna_lazy_load("node_modules/director/build/director.js[6646:6946]", functionData => eval(functionData))};

Router.prototype.getRoute = function (v) {lacuna_lazy_load("node_modules/director/build/director.js[6990:7218]", functionData => eval(functionData))};

Router.prototype.destroy = function () {lacuna_lazy_load("node_modules/director/build/director.js[7260:7312]", functionData => eval(functionData))};

Router.prototype.getPath = function () {lacuna_lazy_load("node_modules/director/build/director.js[7354:7473]", functionData => eval(functionData))};
function _every(arr, iterator) {lacuna_lazy_load("node_modules/director/build/director.js[7506:7623]", functionData => eval(functionData))}

function _flatten(arr) {lacuna_lazy_load("node_modules/director/build/director.js[7648:7767]", functionData => eval(functionData))}

function _asyncEverySeries(arr, iterator, callback) {lacuna_lazy_load("node_modules/director/build/director.js[7821:8226]", functionData => eval(functionData))}

function paramifyString(str, params, mod) {lacuna_lazy_load("node_modules/director/build/director.js[8270:8499]", functionData => eval(functionData))}

function regifyString(str, params) {lacuna_lazy_load("node_modules/director/build/director.js[8536:9230]", functionData => eval(functionData))}

function terminator(routes, delimiter, start, stop) {lacuna_lazy_load("node_modules/director/build/director.js[9284:10035]", functionData => eval(functionData))}

var QUERY_SEPARATOR = /\?.*/;

Router.prototype.configure = function(options) {lacuna_lazy_load("node_modules/director/build/director.js[10115:10921]", functionData => eval(functionData))};

Router.prototype.param = function(token, matcher) {lacuna_lazy_load("node_modules/director/build/director.js[10974:11193]", functionData => eval(functionData))};

Router.prototype.on = Router.prototype.route = function(method, path, route) {lacuna_lazy_load("node_modules/director/build/director.js[11273:11859]", functionData => eval(functionData))};

Router.prototype.path = function(path, routesFn) {lacuna_lazy_load("node_modules/director/build/director.js[11911:12236]", functionData => eval(functionData))};

Router.prototype.dispatch = function(method, path, callback) {lacuna_lazy_load("node_modules/director/build/director.js[12300:13218]", functionData => eval(functionData))};

Router.prototype.invoke = function(fns, thisArg, callback) {lacuna_lazy_load("node_modules/director/build/director.js[13280:14067]", functionData => eval(functionData))};

Router.prototype.traverse = function(method, path, routes, regexp, filter) {lacuna_lazy_load("node_modules/director/build/director.js[14145:16957]", functionData => eval(functionData))};

Router.prototype.insert = function(method, path, route, parent) {lacuna_lazy_load("node_modules/director/build/director.js[17024:18451]", functionData => eval(functionData))};



Router.prototype.extend = function(methods) {lacuna_lazy_load("node_modules/director/build/director.js[18500:18862]", functionData => eval(functionData))};

Router.prototype.runlist = function(fns) {lacuna_lazy_load("node_modules/director/build/director.js[18906:19178]", functionData => eval(functionData))};

Router.prototype.mount = function(routes, path) {lacuna_lazy_load("node_modules/director/build/director.js[19229:20280]", functionData => eval(functionData))};



}(typeof exports === "object" ? exports : window));